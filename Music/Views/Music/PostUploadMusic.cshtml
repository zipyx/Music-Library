@using Microsoft.AspNetCore.Identity
@using ClamDataLibrary.Models
@model Clam.Areas.Music.Models.StreamMusicDataUpload
@{
    ViewData["Title"] = "PostUploadMusic";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/music/manage">Music</a></li>
        <li class="breadcrumb-item active" aria-current="page">New Track</li>
    </ol>
</nav>

<hr />
<div class="row">
    <div class="col-md-8">
        @using (Html.BeginForm(actionName: "UploadDatabase", controllerName: "Music", method: FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "AJAXSubmit(this); return false;" }))
        {
            @Html.ValidationSummary(message: "Ensure Field is filled in by specific requirements.", htmlAttributes: new { @class = "text-danger" })
            <div class="form-group row">
                @Html.LabelFor(model => model.SongTitle, null, new { @class = "col-md-4 col-form-label control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.SongTitle, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SongTitle, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.SongArtist, null, new { @class = "col-md-4 col-form-label control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.SongArtist, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SongArtist, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.ItemPath, null, new { @class = "col-md-4 col-form-label control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.ItemPath, null, new { @class = "form-control-file border", @type = "file" })
                    @Html.ValidationMessageFor(model => model.ItemPath, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Status, null, new { @class = "col-md-4 col-form-label control-label" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.Status, new SelectList(ViewBag.ViewStatus, "Value", "Text"), new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Upload" class="btn btn-primary" />
            </div>
        }
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}